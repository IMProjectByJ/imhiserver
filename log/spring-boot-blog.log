2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44833(String), 2018-01-30 23:59:58.0(Timestamp), 10038(Integer) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:00 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:00:00 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:01 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:00:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:00:01 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 864(Integer) 
2018-01-31 00:00:02 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:00:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:07 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:07 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:07 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:07 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:10 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:10 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:10 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10001(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328015748.png"}(String), 2(Integer), 2018-01-31 00:00:15.754(Timestamp) 
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:00:15 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:00:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:00:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 865(Integer) 
2018-01-31 00:00:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:41 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:41 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:41 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:41 [http-nio-8080-exec-3] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at com.jit.imhi.api.ImageOperateApi.downHead(ImageOperateApi.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:00:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:56 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:56 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328057004.png"}(String), 2(Integer), 2018-01-31 00:00:57.01(Timestamp) 
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:00:57 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:00:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:00:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:00:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:00:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 866(Integer) 
2018-01-31 00:00:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:00:57 [http-nio-8080-exec-5] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at com.jit.imhi.api.FileOperateApi.downLoadFile(FileOperateApi.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:04:43 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 14176 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 00:04:43 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 00:04:43 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 00:04:48 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 5.546 seconds (JVM running for 6.923) 
2018-01-31 00:05:00 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:00 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:00 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:00 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 00:05:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:01 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:01 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:01 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:05:01 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:01 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:01 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:05:01 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54803(String), 2018-01-31 00:05:00.0(Timestamp), 10001(Integer) 
2018-01-31 00:05:01 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44835(String), 2018-01-31 00:05:01.0(Timestamp), 10038(Integer) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:05:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:05:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:05:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:05:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:05:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:05:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:05:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:05:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:05:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:05:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:05:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 864(Integer) 
2018-01-31 00:05:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:05:04 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:04 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:04 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:04 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:04 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:05 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:05 [http-nio-8080-exec-8] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at com.jit.imhi.api.ImageOperateApi.downHead(ImageOperateApi.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:05:07 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:07 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:07 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328312424.png"}(String), 2(Integer), 2018-01-31 00:05:12.429(Timestamp) 
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:05:12 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:05:12 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:05:12 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:05:12 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:12 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:05:12 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 868(Integer) 
2018-01-31 00:05:12 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:05:12 [http-nio-8080-exec-5] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at com.jit.imhi.api.FileOperateApi.downLoadFile(FileOperateApi.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:06:30 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:06:30 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 54798(String) 
2018-01-31 00:06:30 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:06:30 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 54803(String) 
2018-01-31 00:06:30 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 0 
2018-01-31 00:06:30 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 868(Integer), 0(Integer), 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:06:31 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: null, null, null, null, null 
2018-01-31 00:06:32 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 0 
2018-01-31 00:06:38 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:06:38 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44834(String) 
2018-01-31 00:06:38 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:06:38 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44835(String) 
2018-01-31 00:06:38 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 0 
2018-01-31 00:06:38 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 00:06:54 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 3628 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 00:06:54 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 00:06:54 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 00:06:59 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 5.486 seconds (JVM running for 6.973) 
2018-01-31 00:07:07 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:07 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:07 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:07 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:07 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:07 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:07 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:07 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:07 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:07:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:08 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:09 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:09 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:07:09 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:09 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:09 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:07:09 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54818(String), 2018-01-31 00:07:08.0(Timestamp), 10001(Integer) 
2018-01-31 00:07:09 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44839(String), 2018-01-31 00:07:08.0(Timestamp), 10038(Integer) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:10 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:10 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:07:11 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:07:11 [http-nio-8080-exec-7] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:07:11 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 868(Integer) 
2018-01-31 00:07:12 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:07:16 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:16 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:16 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:16 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:16 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:16 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:16 [http-nio-8080-exec-1] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at com.jit.imhi.api.ImageOperateApi.downHead(ImageOperateApi.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:07:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:16 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:17 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:17 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:17 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:17 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:07:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:07:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328441900.png"}(String), 2(Integer), 2018-01-31 00:07:21.907(Timestamp) 
2018-01-31 00:07:22 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:07:22 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:07:22 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:07:22 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:07:22 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:07:22 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:07:22 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:07:22 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:07:22 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 869(Integer) 
2018-01-31 00:07:22 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:08:57 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:08:57 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:08:57 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:08:58 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:08:58 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:08:58 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:08:58 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:08:58 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:08:59 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:08:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:08:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:09:00 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328560307.png"}(String), 3(Integer), 2018-01-31 00:09:20.312(Timestamp) 
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:09:20 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 2(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328560307.png","message_id":870,"message":"success"}(String), 3(Integer), null 
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 871(Integer) 
2018-01-31 00:09:20 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:09:21 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:09:21 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:09:21 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:09:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:09:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:09:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:09:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:09:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328597983.png"}(String), 3(Integer), 2018-01-31 00:09:57.989(Timestamp) 
2018-01-31 00:09:58 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:09:58 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:09:58 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:09:58 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 2(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517328597983.png","message_id":872,"message":"success"}(String), 3(Integer), null 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 873(Integer) 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:09:58 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:17:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:17:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:17:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"182545_2422425173_3_640_480.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\182545_2422425173_3_640_4801517329026906.jpg"}(String), 3(Integer), 2018-01-31 00:17:06.914(Timestamp) 
2018-01-31 00:17:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:17:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:17:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:17:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 2(Integer), {"fileName":"182545_2422425173_3_640_480.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\182545_2422425173_3_640_4801517329026906.jpg","message_id":877,"message":"success"}(String), 3(Integer), null 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 878(Integer) 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:17:07 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:17:14 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:14 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:17:14 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:14 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:14 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:17:14 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:16 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:16 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:17:16 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:16 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:16 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:17:16 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:16 [http-nio-8080-exec-9] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at com.jit.imhi.api.ImageOperateApi.downHead(ImageOperateApi.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 3(Integer), {"fileName":"84dec11803cb01bb349522812dbbe7c4.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\84dec11803cb01bb349522812dbbe7c41517329045266.jpg"}(String), 2(Integer), 2018-01-31 00:17:25.279(Timestamp) 
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:17:25 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:17:25 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:17:25 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:17:25 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:25 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:17:25 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 879(Integer) 
2018-01-31 00:17:25 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 1(Integer), 测试(String), 2(Integer), 2018-01-31 00:17:30.0(Timestamp) 
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 880(Integer) 
2018-01-31 00:17:30 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:17:54 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:17:54 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 10001(Integer), 1(Integer), 测试用例2(String), 2(Integer), 2018-01-31 00:17:57.0(Timestamp) 
2018-01-31 00:17:54 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:17:54 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:17:54 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:17:55 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:17:55 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:17:55 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 881(Integer) 
2018-01-31 00:17:55 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:18:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:18:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:18:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:18:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:18:00 [http-nio-8080-exec-7] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 10001(Integer), 3(Integer), {"fileName":"-5741a272746f1b96.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\-5741a272746f1b961517329080868.jpg"}(String), 2(Integer), 2018-01-31 00:18:00.878(Timestamp) 
2018-01-31 00:18:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:18:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:18:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:18:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:18:01 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:18:01 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:18:01 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:18:01 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:18:01 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 882(Integer) 
2018-01-31 00:18:01 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 10001(Integer), 1(Integer), 测试3(String), 2(Integer), 2018-01-31 00:19:48.0(Timestamp) 
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 883(Integer) 
2018-01-31 00:19:46 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 10001(Integer), 3(Integer), {"fileName":"-5741a272746f1b96.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\-5741a272746f1b961517329199710.jpg"}(String), 2(Integer), 2018-01-31 00:19:59.72(Timestamp) 
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:19:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:20:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:20:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:20:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:20:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:20:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 884(Integer) 
2018-01-31 00:20:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:20:05 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:20:05 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 1(Integer), 旧时(String), 2(Integer), 2018-01-31 00:20:06.0(Timestamp) 
2018-01-31 00:20:05 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:20:05 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:20:05 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:20:06 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:20:06 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:20:06 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 885(Integer) 
2018-01-31 00:20:06 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:02 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:22:02 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 10001(Integer), 3(Integer), {"fileName":"-5741a272746f1b96.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\-5741a272746f1b961517329323036.jpg"}(String), 2(Integer), 2018-01-31 00:22:03.045(Timestamp) 
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:22:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:22:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:22:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:22:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:22:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 886(Integer) 
2018-01-31 00:22:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 10001(Integer), 1(Integer), 测试4(String), 2(Integer), 2018-01-31 00:22:16.0(Timestamp) 
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 887(Integer) 
2018-01-31 00:22:14 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 1(Integer), 测试5(String), 2(Integer), 2018-01-31 00:22:22.0(Timestamp) 
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 888(Integer) 
2018-01-31 00:22:22 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 10038(Integer), 3(Integer), {"fileName":"Screenshot_20180130-120317.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-1203171517329351136.png"}(String), 2(Integer), 2018-01-31 00:22:31.142(Timestamp) 
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:22:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:22:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:22:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:22:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:22:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:22:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 889(Integer) 
2018-01-31 00:22:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:23:46 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:23:46 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 54818(String) 
2018-01-31 00:23:46 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 00:23:46 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:23:46 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 889(Integer), 0(Integer), 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: null, null, null, null, null 
2018-01-31 00:23:47 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 0 
2018-01-31 00:23:48 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:23:48 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 887(Integer), 0(Integer), 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:23:48 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 0 
2018-01-31 00:23:52 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:23:52 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44839(String) 
2018-01-31 00:23:52 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 00:34:08 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 7652 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 00:34:08 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 00:34:08 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 00:34:13 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 5.167 seconds (JVM running for 6.455) 
2018-01-31 00:34:22 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:22 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:22 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:22 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:34:23 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:23 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:24 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:34:24 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:24 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:24 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:34:24 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44843(String), 2018-01-31 00:34:23.0(Timestamp), 10038(Integer) 
2018-01-31 00:34:24 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54878(String), 2018-01-31 00:34:23.0(Timestamp), 10001(Integer) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:25 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:34:25 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:34:26 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 889(Integer) 
2018-01-31 00:34:26 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:34:26 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:34:26 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:34:26 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:34:27 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:34:40 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:34:40 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:34:40 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:42 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:34:42 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:34:42 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:34:47 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:34:47 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:34:47 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:48 [http-nio-8080-exec-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:34:48 [http-nio-8080-exec-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:34:48 [http-nio-8080-exec-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180131-002240.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180131-0022401517330090658.png"}(String), 3(Integer), 2018-01-31 00:34:50.665(Timestamp) 
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:34:50 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:34:50 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:34:50 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 890(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:34:51 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:34:51 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:51 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:34:51 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:51 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:34:51 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 890(Integer) 
2018-01-31 00:34:51 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:34:51 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:34:51 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:51 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:51 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:34:51 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 890(Integer) 
2018-01-31 00:34:51 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:34:51 [http-nio-8080-exec-1] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at com.jit.imhi.api.FileOperateApi.downLoadFile(FileOperateApi.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:43:38 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 8276 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 00:43:38 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 00:43:38 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 00:43:43 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 4.803 seconds (JVM running for 6.029) 
2018-01-31 00:43:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:43:59 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:43:59 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:43:59 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:43:59 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:00 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:00 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:00 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:00 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:44:00 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:00 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:00 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:44:00 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44847(String), 2018-01-31 00:43:59.0(Timestamp), 10038(Integer) 
2018-01-31 00:44:00 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54896(String), 2018-01-31 00:43:59.0(Timestamp), 10001(Integer) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:44:01 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:44:01 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:44:02 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 889(Integer) 
2018-01-31 00:44:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:44:02 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:44:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:44:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:04 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:04 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:04 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:04 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:07 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:07 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:44:08 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:08 [http-nio-8080-exec-6] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at com.jit.imhi.api.ImageOperateApi.downHead(ImageOperateApi.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 00:44:09 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:09 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:09 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:09 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:09 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:44:09 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:19 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:44:19 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:44:19 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:20 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:44:20 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:44:20 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:44:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:44:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:44:23 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:44:23 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:44:23 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:44:43 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:43 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:43 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:43 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:44:43 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:43 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:44:43 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:43 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 00:44:43 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:44:44 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:44 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:44 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:44 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:44:44 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:44 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10000(Integer), 192.168.43.184(String), 51650(String), 2018-01-31 00:44:44.0(Timestamp), 10000(Integer) 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10000(Integer) 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:44:44 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:44:45 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:44:45 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 9999(Integer), 3(String) 
2018-01-31 00:44:45 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:44:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 00:44:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10000(Integer), 2(String) 
2018-01-31 00:44:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:44:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:44:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 00:44:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 00:44:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10000(Integer), 2229(Integer), 0(Integer), 890(Integer) 
2018-01-31 00:44:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:44:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:44:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 3(String), 2229(Integer), 741(Integer), 890(Integer) 
2018-01-31 00:44:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 00:44:45 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 8 
2018-01-31 00:44:46 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 00:44:46 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.184(String), 51650(String) 
2018-01-31 00:44:46 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 00:44:46 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:44:46 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 890(Integer), 741(Integer), 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:44:46 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180131-002240.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180131-0022401517330748260.png"}(String), 3(Integer), 2018-01-31 00:45:48.268(Timestamp) 
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:45:48 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 891(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:45:48 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:45:49 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:45:49 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:45:49 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:49 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:45:49 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 891(Integer) 
2018-01-31 00:45:49 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 891(Integer) 
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 2229(Integer) 
2018-01-31 00:45:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 1(Integer), 测试(String), 3(Integer), 2018-01-31 00:45:55.0(Timestamp) 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 892(Integer) 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 892(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:45:55 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"IMG_20171129_202511.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\IMG_20171129_2025111517330763335.jpg"}(String), 3(Integer), 2018-01-31 00:46:03.353(Timestamp) 
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:46:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:46:03 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:46:03 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:46:03 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:46:03 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:46:03 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:46:04 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:04 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:46:04 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 893(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:46:04 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 893(Integer) 
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 00:46:04 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:46:04 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:46:04 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:04 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:04 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:46:04 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 893(Integer) 
2018-01-31 00:46:04 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:08 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:46:08 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 1(Integer), 呵呵呵(String), 3(Integer), 2018-01-31 00:46:09.0(Timestamp) 
2018-01-31 00:46:08 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:46:08 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:46:08 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 894(Integer) 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 894(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:46:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 1(Integer), 相切(String), 3(Integer), 2018-01-31 00:49:39.0(Timestamp) 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 895(Integer) 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 1(Integer), 喝酒喝(String), 3(Integer), 2018-01-31 00:49:41.0(Timestamp) 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:49:39 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 895(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:49:39 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 896(Integer) 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:49:40 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 896(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:49:40 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 1(Integer), 啥(String), 3(Integer), 2018-01-31 00:50:05.0(Timestamp) 
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 897(Integer) 
2018-01-31 00:50:03 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:50:03 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:50:03 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 1(Integer), 臭嗨(String), 3(Integer), 2018-01-31 00:50:04.0(Timestamp) 
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 898(Integer) 
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 897(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:50:04 [NioProcessor-5] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 898(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:50:04 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:52:24 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 8352 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 00:52:24 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 00:52:24 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 00:52:29 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 4.7 seconds (JVM running for 6.011) 
2018-01-31 00:52:45 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:45 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:45 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:45 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:45 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:45 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:46 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:46 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:47 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:52:47 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:47 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:47 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:52:47 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54919(String), 2018-01-31 00:52:46.0(Timestamp), 10001(Integer) 
2018-01-31 00:52:47 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44876(String), 2018-01-31 00:52:46.0(Timestamp), 10038(Integer) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:52:48 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:48 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:52:49 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:49 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:52:49 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:49 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:52:49 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:52:49 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 889(Integer) 
2018-01-31 00:52:49 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:52:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:52:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:52:51 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:53 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:52:53 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:52:53 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:52:54 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:52:54 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:52:54 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:52:55 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:52:55 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:52:55 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:53:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:53:23 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"-28650c121190bcd1.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\-28650c121190bcd11517331204062.jpg"}(String), 3(Integer), 2018-01-31 00:53:24.084(Timestamp) 
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:53:24 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 899(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:53:24 [NioProcessor-4] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 899(Integer) 
2018-01-31 00:53:25 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:53:25 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 00:53:25 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:53:25 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:53:25 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 899(Integer) 
2018-01-31 00:53:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:53:25 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:09 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 10908 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 00:55:09 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 00:55:09 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 00:55:13 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 4.854 seconds (JVM running for 6.203) 
2018-01-31 00:55:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:25 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:25 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:25 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:26 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:26 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:26 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:27 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:55:27 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:27 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:27 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:55:27 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54929(String), 2018-01-31 00:55:26.0(Timestamp), 10001(Integer) 
2018-01-31 00:55:27 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44886(String), 2018-01-31 00:55:26.0(Timestamp), 10038(Integer) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 00:55:28 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 00:55:28 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 00:55:29 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 00:55:29 [http-nio-8080-exec-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 00:55:29 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 00:55:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 889(Integer) 
2018-01-31 00:55:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 00:55:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:55:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:55:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 00:55:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:55:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:37 [http-nio-8080-exec-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:55:37 [http-nio-8080-exec-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:55:37 [http-nio-8080-exec-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:55:38 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:55:38 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:55:38 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:55:52 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:52 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"IMG_20171129_202511.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\IMG_20171129_2025111517331353075.jpg"}(String), 3(Integer), 2018-01-31 00:55:53.086(Timestamp) 
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 00:55:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 900(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 00:55:53 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 900(Integer) 
2018-01-31 00:55:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 00:55:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 00:55:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 00:55:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 900(Integer) 
2018-01-31 00:55:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 00:55:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:00:08 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:00:08 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 54929(String) 
2018-01-31 01:00:08 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:00:08 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:00:08 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 889(Integer), 0(Integer), 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:00:08 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:00:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:00:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:00:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:00:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:00:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 900(Integer), 0(Integer), 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:00:09 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:00:13 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:00:13 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44885(String) 
2018-01-31 01:00:14 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:00:14 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44886(String) 
2018-01-31 01:00:14 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 0 
2018-01-31 01:00:14 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:00:50 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 13420 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 01:00:50 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 01:00:50 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 01:00:54 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 4.708 seconds (JVM running for 5.91) 
2018-01-31 01:01:02 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:02 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:02 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:02 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:02 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:02 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:01:03 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:03 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54940(String), 2018-01-31 01:01:03.0(Timestamp), 10001(Integer) 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:01:04 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:04 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:01:04 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:01:04 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:04 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44888(String), 2018-01-31 01:01:03.0(Timestamp), 10038(Integer) 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:01:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:05 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 01:01:05 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:05 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:01:06 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:01:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 2(String), 10038(Integer), 0(Integer), 889(Integer) 
2018-01-31 01:01:06 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 01:01:22 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:01:22 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:23 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:01:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:23 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:25 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:01:25 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:25 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:01:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:01:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:25 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180131-002240.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180131-0022401517331689429.png"}(String), 3(Integer), 2018-01-31 01:01:29.438(Timestamp) 
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:01:29 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 01:01:29 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 902(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 01:01:30 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 902(Integer) 
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 2229(Integer) 
2018-01-31 01:01:30 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 1(Integer), 测试(String), 3(Integer), 2018-01-31 01:01:35.0(Timestamp) 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 904(Integer) 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 01:01:35 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 904(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 01:01:36 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 1(Integer), 不存在的(String), 3(Integer), 2018-01-31 01:01:46.0(Timestamp) 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 905(Integer) 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 01:01:44 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 905(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 01:01:45 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"-5741a272746f1b96.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\-5741a272746f1b961517331710630.jpg"}(String), 3(Integer), 2018-01-31 01:01:50.648(Timestamp) 
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:01:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:01:50 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:01:50 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 906(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 01:01:51 [NioProcessor-3] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 906(Integer) 
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 01:01:51 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:02:26 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:02:26 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:02:26 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:02:32 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:02:32 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:02:32 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:02:39 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:02:39 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:02:39 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:02:46 [http-nio-8080-exec-1] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:02:46 [http-nio-8080-exec-1] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:02:46 [http-nio-8080-exec-1] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:02:58 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:02:58 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44888(String) 
2018-01-31 01:02:58 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:02:58 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:02:58 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 889(Integer), 889(Integer), 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 906(Integer), 906(Integer), 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:02:59 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:03:01 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:03:01 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:01 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:03:01 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44890(String), 2018-01-31 01:03:01.0(Timestamp), 10038(Integer) 
2018-01-31 01:03:01 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:02 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:03:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 01:03:03 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:03:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:03:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:48 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:48 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:48 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:48 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:03:48 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:48 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:03:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:03:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:03:48 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:48 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:48 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:48 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:03:48 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:49 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10000(Integer), 192.168.43.184(String), 51673(String), 2018-01-31 01:03:48.0(Timestamp), 10000(Integer) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 9999(Integer), 3(String) 
2018-01-31 01:03:49 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:03:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:03:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10000(Integer), 2(String) 
2018-01-31 01:03:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:03:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:03:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10000(Integer), 2229(Integer), 0(Integer), 906(Integer) 
2018-01-31 01:03:50 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:03:57 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:03:57 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:03:57 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:03:59 [http-nio-8080-exec-1] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:03:59 [http-nio-8080-exec-1] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:03:59 [http-nio-8080-exec-1] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:04:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:04:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:04:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:17 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:04:17 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:04:17 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:04:18 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:04:18 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:04:18 [http-nio-8080-exec-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180131-002240.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180131-0022401517331861427.png"}(String), 3(Integer), 2018-01-31 01:04:21.434(Timestamp) 
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:04:21 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:04:21 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:04:21 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:04:21 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:04:21 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:04:21 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 907(Integer) 
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer) 
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:04:22 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 907(Integer) 
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 2229(Integer) 
2018-01-31 01:04:22 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:04:22 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:04:22 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.184(String), 51673(String) 
2018-01-31 01:04:22 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:04:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:04:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 907(Integer), 0(Integer), 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:04:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:05:16 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:05:16 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:05:16 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180131-001741.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180131-0017411517331920552.png"}(String), 3(Integer), 2018-01-31 01:05:20.558(Timestamp) 
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:05:20 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:05:20 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:05:20 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:05:20 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:05:21 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:05:21 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:05:21 [NioProcessor-2] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:21 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 ==>  Preparing: update NumInfo set new_id = ? , friend_id = ? where user_id = ? and friend_type = ?  
2018-01-31 01:05:21 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 ==> Parameters: 908(Integer), 2229(Integer), 10000(Integer), 2(String) 
2018-01-31 01:05:21 [NioProcessor-2] DEBUG c.j.i.m.N.updateGroupOld : 
 <==    Updates: 1 
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 908(Integer) 
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 2229(Integer) 
2018-01-31 01:05:21 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:40 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:05:40 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.184(String), 51680(String) 
2018-01-31 01:05:40 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 0 
2018-01-31 01:05:44 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:44 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:44 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:45 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:05:45 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:05:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:05:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:45 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:05:45 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:45 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:45 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10000(Integer), 192.168.43.184(String), 51686(String), 2018-01-31 01:05:45.0(Timestamp), 10000(Integer) 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:05:45 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:46 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:05:46 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:05:46 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:05:46 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:05:46 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 9999(Integer), 3(String) 
2018-01-31 01:05:46 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:05:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:05:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:05:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10000(Integer), 2(String) 
2018-01-31 01:05:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:05:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:05:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:05:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:05:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:05:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10000(Integer), 2229(Integer), 0(Integer), 908(Integer) 
2018-01-31 01:05:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 3(String), 2229(Integer), 906(Integer), 908(Integer) 
2018-01-31 01:05:46 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:05:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 3 
2018-01-31 01:05:48 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:05:48 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:05:48 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:50 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:05:50 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:05:50 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"Screenshot_20180130-230038.png","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\Screenshot_20180130-2300381517331956338.png"}(String), 3(Integer), 2018-01-31 01:05:56.345(Timestamp) 
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:05:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:05:56 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:05:56 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:05:56 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 909(Integer) 
2018-01-31 01:05:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:05:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:05:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 2229(Integer) 
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 909(Integer) 
2018-01-31 01:05:57 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer) 
2018-01-31 01:05:57 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"IMG_20171129_202511.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\IMG_20171129_2025111517331968259.jpg"}(String), 3(Integer), 2018-01-31 01:06:08.275(Timestamp) 
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:06:08 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:06:08 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:06:08 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:06:08 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 910(Integer) 
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:06:08 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:06:09 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 910(Integer) 
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer) 
2018-01-31 01:06:09 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:17 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:06:17 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 1(Integer), 测试(String), 3(Integer), 2018-01-31 01:06:18.0(Timestamp) 
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 911(Integer) 
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:06:18 [NioProcessor-2] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:06:54 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:06:54 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:06:55 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:55 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:06:55 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:06:55 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:06:55 [http-nio-8080-exec-6] ERROR c.j.i.config.GloablExceptionHandler : 
 java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at com.jit.imhi.api.ImageOperateApi.downHead(ImageOperateApi.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
 
2018-01-31 01:09:04 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:09:04 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"IMG_20171129_202511.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\IMG_20171129_2025111517332145066.jpg"}(String), 3(Integer), 2018-01-31 01:09:05.085(Timestamp) 
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:09:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:09:05 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:09:05 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:09:05 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 912(Integer) 
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer) 
2018-01-31 01:09:05 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:09:49 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:09:49 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:09:49 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:10:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:10:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:10:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:10:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:10:46 [http-nio-8080-exec-9] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"IMG_20171129_202511.jpg","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\IMG_20171129_2025111517332246914.jpg"}(String), 3(Integer), 2018-01-31 01:10:46.931(Timestamp) 
2018-01-31 01:10:47 [http-nio-8080-exec-9] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:10:47 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:10:47 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:10:47 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:10:47 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:10:47 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:10:47 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 913(Integer) 
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer), 2229(Integer) 
2018-01-31 01:10:47 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:10:57 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:10:57 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 1(Integer), 欧1(String), 3(Integer), 2018-01-31 01:11:00.0(Timestamp) 
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 914(Integer) 
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:10:58 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:17:40 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 7724 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 01:17:40 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 01:17:40 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 01:17:44 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 4.704 seconds (JVM running for 5.94) 
2018-01-31 01:17:53 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:17:53 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:53 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:17:53 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:17:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:53 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:17:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:17:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:17:53 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:17:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:17:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:54 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:17:54 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:54 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 54988(String), 2018-01-31 01:17:54.0(Timestamp), 10001(Integer) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:17:55 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:17:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:17:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:17:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:17:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:17:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:17:56 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:17:56 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:17:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:17:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:17:56 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:17:56 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:17:56 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:17:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:17:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:17:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 3(String), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:17:56 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:17:56 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 10 
2018-01-31 01:17:56 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:17:56 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:17:56 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:17:56 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:17:56 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:17:57 [http-nio-8080-exec-9] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:18:04 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:18:04 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:18:04 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:18:49 [http-nio-8080-exec-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:18:49 [http-nio-8080-exec-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:18:49 [http-nio-8080-exec-3] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:19:11 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:19:11 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 54988(String) 
2018-01-31 01:19:11 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:19:11 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:19:11 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:19:11 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:19:12 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:19:12 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 907(Integer), 907(Integer), 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:19:12 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:19:13 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:19:13 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:19:14 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:19:14 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:14 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55003(String), 2018-01-31 01:19:14.0(Timestamp), 10001(Integer) 
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:19:14 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:19:15 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:19:15 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:19:15 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:19:16 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:19:16 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:19:16 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:19:16 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:19:16 [http-nio-8080-exec-10] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:26:40 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 8956 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 01:26:40 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 01:26:40 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 01:26:44 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 4.566 seconds (JVM running for 5.842) 
2018-01-31 01:26:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:53 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:53 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:53 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:53 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:26:54 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:26:54 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:54 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:54 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10000(Integer), 192.168.43.184(String), 51698(String), 2018-01-31 01:26:54.0(Timestamp), 10000(Integer) 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:55 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:26:55 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:55 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:55 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:26:55 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44896(String), 2018-01-31 01:26:54.0(Timestamp), 10038(Integer) 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:26:55 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:26:56 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:26:56 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:26:56 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:26:56 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 9999(Integer), 3(String) 
2018-01-31 01:26:56 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 01:26:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:26:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:26:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10000(Integer), 2(String) 
2018-01-31 01:26:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:26:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:26:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:26:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10000(Integer), 2229(Integer), 0(Integer), 908(Integer) 
2018-01-31 01:26:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:26:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:26:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 3(String), 2229(Integer), 906(Integer), 908(Integer) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 01:26:56 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 01:26:56 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 3 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 01:26:56 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:26:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:26:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:26:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:26:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:26:57 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:26:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:26:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:26:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 3(String), 2229(Integer), 906(Integer), 908(Integer) 
2018-01-31 01:26:57 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 3 
2018-01-31 01:26:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:26:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:26:59 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:27:00 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:27:00 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:27:00 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:27:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:27:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:27:01 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:27:02 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:27:02 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:27:02 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-012710.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0127101517333230639.m4a"}(String), 1(Integer), 2018-01-31 01:27:10.644(Timestamp) 
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:27:10 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:29:53 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:29:53 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.184(String), 51698(String) 
2018-01-31 01:29:53 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:29:53 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:29:53 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 908(Integer), 908(Integer), 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:29:53 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:31:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:31:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:03 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:31:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:31:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:03 [http-nio-8080-exec-10] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:31:03 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:31:03 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:03 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:31:03 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:31:03 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:03 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:31:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:31:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:03 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:31:03 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:31:03 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:31:03 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:31:03 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10000(Integer), 192.168.43.184(String), 51727(String), 2018-01-31 01:31:03.0(Timestamp), 10000(Integer) 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 0 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 2229(Integer), 2(String) 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10000(Integer), 9999(Integer), 3(String) 
2018-01-31 01:31:04 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:31:04 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:31:04 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10000(Integer), 2(String) 
2018-01-31 01:31:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:31:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:31:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10000(Integer), 2229(Integer), 0(Integer), 908(Integer) 
2018-01-31 01:31:05 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:31:10 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:31:10 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:31:10 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:31:12 [http-nio-8080-exec-6] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:31:12 [http-nio-8080-exec-6] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:31:12 [http-nio-8080-exec-6] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-013116.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0131161517333477436.m4a"}(String), 1(Integer), 2018-01-31 01:31:17.445(Timestamp) 
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:31:17 [http-nio-8080-exec-4] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:31:58 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:31:58 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:31:58 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:32:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:32:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:32:06 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:32:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:32:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-013206.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0132061517333526995.m4a"}(String), 1(Integer), 2018-01-31 01:32:07.003(Timestamp) 
2018-01-31 01:32:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:32:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:32:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:32:07 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:32:21 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:32:21 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:32:21 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:32:23 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:32:23 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:32:23 [http-nio-8080-exec-7] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10000(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-013240.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10000\\2018-01-31-0132401517333561503.m4a"}(String), 1(Integer), 2018-01-31 01:32:41.522(Timestamp) 
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:32:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:32:46 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:32:46 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:32:46 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:32:46 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:32:46 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10000(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-013242.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10000\\2018-01-31-0132421517333566964.m4a"}(String), 1(Integer), 2018-01-31 01:32:46.971(Timestamp) 
2018-01-31 01:32:47 [http-nio-8080-exec-2] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:32:47 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:32:47 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:32:47 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10000(Integer) 
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10000(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-013304.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10000\\2018-01-31-0133041517333588596.m4a"}(String), 1(Integer), 2018-01-31 01:33:08.601(Timestamp) 
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:33:08 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:33:33 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:33:33 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:33:33 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:33 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:33:33 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:33:33 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55013(String), 2018-01-31 01:33:33.0(Timestamp), 10001(Integer) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:33:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:33:35 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:33:35 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:33:35 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:33:35 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:33:35 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:33:35 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:33:35 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:33:35 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:33:36 [http-nio-8080-exec-1] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:34:29 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:34:29 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 55013(String) 
2018-01-31 01:34:29 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:34:29 [NioProcessor-5] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:34:29 [NioProcessor-5] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:34:29 [NioProcessor-5] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:34:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:32 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:34:32 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:34:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:33 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:33 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:33 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:33 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:34:33 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:33 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:33 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:34:33 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55026(String), 2018-01-31 01:34:33.0(Timestamp), 10001(Integer) 
2018-01-31 01:34:33 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:34:34 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:34:34 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:34:34 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:34:34 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:34:34 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:34:35 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:34:35 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:34:35 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:34:39 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:34:39 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:34:39 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:40 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:34:40 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:34:40 [http-nio-8080-exec-9] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-013443.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\2018-01-31-0134431517333688449.m4a"}(String), 1(Integer), 2018-01-31 01:34:48.463(Timestamp) 
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:34:48 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 55026(String) 
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: null, null, null, null, null 
2018-01-31 01:39:22 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 0 
2018-01-31 01:39:30 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:39:30 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44896(String) 
2018-01-31 01:39:30 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:39:30 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:39:30 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: null, null, null, null, null 
2018-01-31 01:39:30 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 0 
2018-01-31 01:39:39 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:39 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:39 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:39:39 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:39 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:40 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55044(String), 2018-01-31 01:39:40.0(Timestamp), 10001(Integer) 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:39:40 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:39:41 [NioProcessor-3] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:39:41 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:39:41 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:39:41 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:39:41 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:39:41 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:39:41 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:39:41 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:39:42 [http-nio-8080-exec-6] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:40:29 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:40:29 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44897(String) 
2018-01-31 01:40:29 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 0 
2018-01-31 01:40:32 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:32 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:32 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:40:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-9] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44900(String), 2018-01-31 01:40:33.0(Timestamp), 10038(Integer) 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:40:33 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 01:40:34 [NioProcessor-4] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:40:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:40:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:40:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:36 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:40:36 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:40:36 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:37 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:40:37 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:40:37 [http-nio-8080-exec-10] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:38 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:40:38 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:40:38 [http-nio-8080-exec-8] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:40:39 [http-nio-8080-exec-6] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:40:39 [http-nio-8080-exec-6] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:40:39 [http-nio-8080-exec-6] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10001(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-014043.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10001\\2018-01-31-0140431517334045341.m4a"}(String), 1(Integer), 2018-01-31 01:40:45.348(Timestamp) 
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:40:45 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-014101.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0141011517334062411.m4a"}(String), 1(Integer), 2018-01-31 01:41:02.418(Timestamp) 
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:41:02 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:44:10 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:44:10 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44900(String) 
2018-01-31 01:44:10 [NioProcessor-4] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:44:11 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:44:11 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: null, null, null, null, null 
2018-01-31 01:44:11 [NioProcessor-4] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 0 
2018-01-31 01:44:32 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 1 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10030(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:32 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:32 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:33 [http-nio-8080-exec-9] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:33 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10038(Integer), 192.168.43.191(String), 44902(String), 2018-01-31 01:44:32.0(Timestamp), 10038(Integer) 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 4 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 1 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 0 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 1(String) 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:44:33 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10030(Integer), 1(String) 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 10038(Integer), 1(String) 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10038(Integer), 9999(Integer), 3(String) 
2018-01-31 01:44:34 [NioProcessor-5] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:44:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:44:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer), 10001(Integer), 1(String) 
2018-01-31 01:44:34 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:38 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:44:38 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:44:38 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:39 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:44:39 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:44:39 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:44:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:44:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:44:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:44:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:44:45 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-014444.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0144441517334285957.m4a"}(String), 1(Integer), 2018-01-31 01:44:45.967(Timestamp) 
2018-01-31 01:44:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:44:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:44:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:44:46 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:44:46 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:44:46 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:44:46 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 55044(String) 
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 924(Integer), 0(Integer), 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:45:50 [NioProcessor-3] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:45:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:45:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:53 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:53 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:45:53 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:45:54 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:45:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:45:54 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:54 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55062(String), 2018-01-31 01:45:54.0(Timestamp), 10001(Integer) 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:45:54 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:45:55 [NioProcessor-1] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:45:55 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:45:55 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:45:55 [http-nio-8080-exec-9] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:45:55 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:45:55 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:45:55 [http-nio-8080-exec-9] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:45:55 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:45:55 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:45:55 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:45:55 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:45:55 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:45:56 [http-nio-8080-exec-3] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:45:59 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:45:59 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:45:59 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:46:00 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:46:00 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:46:01 [http-nio-8080-exec-4] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-014604.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0146041517334367566.m4a"}(String), 1(Integer), 2018-01-31 01:46:07.573(Timestamp) 
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:46:07 [http-nio-8080-exec-10] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:46:07 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:46:07 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:46:08 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:47:15 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:47:15 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 55062(String) 
2018-01-31 01:47:15 [NioProcessor-1] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:47:15 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:47:15 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:47:15 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:47:16 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:47:16 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 925(Integer), 0(Integer), 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:47:16 [NioProcessor-1] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:47:30 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:30 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:30 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:31 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:31 [http-nio-8080-exec-7] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55077(String), 2018-01-31 01:47:31.0(Timestamp), 10001(Integer) 
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 01:47:31 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:47:32 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 01:47:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 01:47:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 01:47:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 01:47:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 01:47:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 01:47:32 [http-nio-8080-exec-3] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 01:47:32 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:47:32 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 01:47:33 [http-nio-8080-exec-5] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 01:47:40 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select group_id, user_id, group_name, create_date, head_url from GroupChat where group_id = ?  
2018-01-31 01:47:40 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:47:40 [http-nio-8080-exec-4] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:47:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:47:41 [http-nio-8080-exec-10] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-014745.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0147451517334467340.m4a"}(String), 1(Integer), 2018-01-31 01:47:47.354(Timestamp) 
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:47:47 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:47:47 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:47:47 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:47:47 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:47:47 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:47 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:47 [http-nio-8080-exec-6] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:47 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:47:47 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 926(Integer) 
2018-01-31 01:47:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:47:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 01:47:48 [http-nio-8080-exec-6] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==>  Preparing: insert into history_message (message_id, user_from_id, to_id, text_type, text_content, message_type, date) values (?, ?, ?, ?, ?, ?, ?)  
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 ==> Parameters: null, 10038(Integer), 2229(Integer), 3(Integer), {"fileName":"2018-01-31-014756.m4a","filePath":"C:\\home\\star\\testFile\\IMHIIMHI\\upLoadFile\\10038\\2018-01-31-0147561517334478615.m4a"}(String), 1(Integer), 2018-01-31 01:47:58.62(Timestamp) 
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.HistoryMessageMapper.insert : 
 <==    Updates: 1 
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==>  Preparing: SELECT LAST_INSERT_ID() AS messageId  
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 ==> Parameters:  
2018-01-31 01:47:58 [http-nio-8080-exec-1] DEBUG c.j.i.m.H.insert!selectKey : 
 <==      Total: 1 
2018-01-31 01:47:59 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, GroupUser.group_membership as user_password, motto from user, GroupUser where user.user_id = GroupUser.member_id and GroupUser.group_id=?  
2018-01-31 01:47:59 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 ==> Parameters: 2229(Integer) 
2018-01-31 01:47:59 [NioProcessor-5] DEBUG c.j.i.m.GroupuserMapper.selectUsers : 
 <==      Total: 3 
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==>  Preparing: select message_id, user_from_id, to_id, text_type, text_content, message_type, date from history_message where message_id = ?  
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 ==> Parameters: 927(Integer) 
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.H.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==>  Preparing: select member_id, group_id, group_membership from GroupUser where member_id = ? and group_id = ?  
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer), 2229(Integer) 
2018-01-31 01:47:59 [http-nio-8080-exec-2] DEBUG c.j.i.m.G.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 01:48:40 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:48:40 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 55077(String) 
2018-01-31 01:48:40 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:48:40 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:48:40 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 01:48:41 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:48:41 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:48:41 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 927(Integer), 0(Integer), 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:48:41 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 01:48:45 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 01:48:45 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.191(String), 44902(String) 
2018-01-31 01:48:45 [NioProcessor-5] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 01:48:45 [NioProcessor-5] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 01:48:45 [NioProcessor-5] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 927(Integer), 0(Integer), 10038(Integer), 2229(Integer), 2(String) 
2018-01-31 01:48:46 [NioProcessor-5] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 02:06:01 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 13284 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 02:06:01 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 02:06:01 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 02:06:07 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 6.742 seconds (JVM running for 8.569) 
2018-01-31 02:06:20 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:06:20 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:20 [http-nio-8080-exec-1] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-3] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:21 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:21 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:06:21 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:21 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55270(String), 2018-01-31 02:06:21.0(Timestamp), 10001(Integer) 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 02:06:22 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 02:06:23 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 02:06:24 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 02:06:24 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 02:06:24 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 02:06:24 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 02:06:24 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 02:06:24 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 02:06:24 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
2018-01-31 02:07:20 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==>  Preparing: select user_id from LoginInfo where ip_addr = ?and ip_port = ?  
2018-01-31 02:07:20 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 ==> Parameters: 192.168.43.1(String), 55270(String) 
2018-01-31 02:07:20 [NioProcessor-2] DEBUG c.j.i.m.L.searchUserId : 
 <==      Total: 1 
2018-01-31 02:07:20 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==>  Preparing: update NumInfo set new_id = ?, old_id = ? where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 02:07:20 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 ==> Parameters: 802(Integer), 0(Integer), 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 02:07:20 [NioProcessor-2] DEBUG c.j.i.m.N.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 02:12:49 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Starting ImhiApplication on DESKTOP-F7HH9N5 with PID 8976 (C:\imhiservice\imhiserver\target\classes started by 11599 in C:\imhiservice\imhiserver) 
2018-01-31 02:12:49 [restartedMain] DEBUG com.jit.imhi.ImhiApplication : 
 Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE 
2018-01-31 02:12:49 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 No active profile set, falling back to default profiles: default 
2018-01-31 02:12:53 [restartedMain] INFO  com.jit.imhi.ImhiApplication : 
 Started ImhiApplication in 5.193 seconds (JVM running for 6.557) 
2018-01-31 02:13:02 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:13:02 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:02 [http-nio-8080-exec-2] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 ==>  Preparing: select c.group_id , c.user_id, c.group_name, c.create_date, c.head_url from GroupUser u join GroupChat c on u.group_id = c.group_id where u.member_id = ?  
2018-01-31 02:13:02 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 02:13:02 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:02 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:03 [http-nio-8080-exec-1] DEBUG c.j.i.m.G.selectByUserID : 
 <==      Total: 2 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 9999(Integer) 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10038(Integer) 
2018-01-31 02:13:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:13:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:03 [http-nio-8080-exec-3] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:03 [http-nio-8080-exec-4] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==>  Preparing: select user_id, phone_num, nikname, head_url, age, gender, birth, user_password, motto from user where user_id = ?  
2018-01-31 02:13:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:03 [http-nio-8080-exec-5] DEBUG c.j.i.m.U.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==>  Preparing: select login_id, user_id, ip_addr, ip_port, login_date from LoginInfo where user_id = ?  
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.L.selectByPrimaryKey : 
 <==      Total: 1 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==>  Preparing: update LoginInfo set user_id = ?, ip_addr = ?, ip_port = ?, login_date = ? where user_id = ?  
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 ==> Parameters: 10001(Integer), 192.168.43.1(String), 55311(String), 2018-01-31 02:13:03.0(Timestamp), 10001(Integer) 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.L.updateByPrimaryKey : 
 <==    Updates: 1 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==>  Preparing: select friend_id from Friend where user_id = ?  
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.FriendMapper.selectByUserId : 
 <==      Total: 3 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==>  Preparing: select group_id from GroupUser where member_id = ?  
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectByUserIdNum : 
 <==      Total: 2 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ? and new_id != old_id  
2018-01-31 02:13:04 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 1(String) 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10001(Integer), 1(String) 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 10038(Integer), 1(String) 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2229(Integer), 2(String) 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 2230(Integer), 2(String) 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 0 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 02:13:05 [NioProcessor-2] DEBUG c.j.i.m.NuminfoMapper.selectAllBy : 
 <==      Total: 1 
2018-01-31 02:13:05 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_type = ?  
2018-01-31 02:13:05 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 ==> Parameters: 10001(Integer), 2(String) 
2018-01-31 02:13:05 [http-nio-8080-exec-7] DEBUG c.j.i.m.NuminfoMapper.selectNumTwo : 
 <==      Total: 1 
2018-01-31 02:13:05 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectTheNum : 
 ==>  Preparing: select COUNT(message_id) from history_message where message_type = ? and user_from_id = ? and to_id = ? and message_id >= ? and message_id <= ?  
2018-01-31 02:13:05 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectTheNum : 
 ==> Parameters: 3(String), 10001(Integer), 2229(Integer), 0(Integer), 907(Integer) 
2018-01-31 02:13:06 [http-nio-8080-exec-7] DEBUG c.j.i.m.H.selectTheNum : 
 <==      Total: 1 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==>  Preparing: select MAX(new_id) from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 ==> Parameters: 10001(Integer), 9999(Integer), 3(String) 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.NuminfoMapper.selectNumOne : 
 <==      Total: 1 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 8(String), 10001(Integer), 0(Integer), 802(Integer) 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 1 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectAllOwn : 
 ==>  Preparing: select group_id from GroupChat where user_id = ?  
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectAllOwn : 
 ==> Parameters: 10001(Integer) 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.G.selectAllOwn : 
 <==      Total: 2 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2229(Integer), 0(Integer), 802(Integer) 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==>  Preparing: select * from history_message where message_type = ? and to_id = ? and message_id >= ? and message_id <= ? order by message_id DESC limit 10  
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 ==> Parameters: 11(String), 2230(Integer), 0(Integer), 802(Integer) 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.H.selectNotic : 
 <==      Total: 0 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==>  Preparing: select user_id, friend_id, friend_type, new_id, old_id from NumInfo where user_id = ? and friend_id = ? and friend_type = ?  
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 ==> Parameters: 2230(Integer), 9999(Integer), 4(String) 
2018-01-31 02:13:06 [http-nio-8080-exec-8] DEBUG c.j.i.m.N.selectByPrimaryKey : 
 <==      Total: 0 
