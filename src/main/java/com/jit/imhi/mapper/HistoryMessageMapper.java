package com.jit.imhi.mapper;

import com.jit.imhi.model.HistoryMessage;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface HistoryMessageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_message
     *
     * @mbggenerated Mon Jan 15 14:38:26 CST 2018
     */
    @Delete({
        "delete from history_message",
        "where message_id = #{messageId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer messageId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_message
     *
     * @mbggenerated Mon Jan 15 14:38:26 CST 2018
     */
    @Insert({
        "insert into history_message (user_from_id, ",
        "to_id, text_type, ",
        "text_content, message_type, ",
        "date)",
        "values ( #{userFromId,jdbcType=INTEGER}, ",
        "#{toId,jdbcType=INTEGER}, #{textType,jdbcType=INTEGER}, ",
        "#{textContent,jdbcType=CHAR}, #{messageType,jdbcType=INTEGER}, ",
        "#{date,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="messageId", before=false, resultType=Integer.class)
    int insert(HistoryMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_message
     *
     * @mbggenerated Mon Jan 15 14:38:26 CST 2018
     */
    @Select({
        "select",
        "message_id, user_from_id, to_id, text_type, text_content, message_type, date",
        "from history_message",
        "where message_id = #{messageId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="message_id", property="messageId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_from_id", property="userFromId", jdbcType=JdbcType.INTEGER),
        @Result(column="to_id", property="toId", jdbcType=JdbcType.INTEGER),
        @Result(column="text_type", property="textType", jdbcType=JdbcType.INTEGER),
        @Result(column="text_content", property="textContent", jdbcType=JdbcType.CHAR),
        @Result(column="message_type", property="messageType", jdbcType=JdbcType.INTEGER),
        @Result(column="date", property="date", jdbcType=JdbcType.TIMESTAMP)
    })
    HistoryMessage selectByPrimaryKey(Integer messageId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_message
     *
     * @mbggenerated Mon Jan 15 14:38:26 CST 2018
     */
    @Select({
        "select",
        "message_id, user_from_id, to_id, text_type, text_content, message_type, date",
        "from history_message"
    })
    @Results({
        @Result(column="message_id", property="messageId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_from_id", property="userFromId", jdbcType=JdbcType.INTEGER),
        @Result(column="to_id", property="toId", jdbcType=JdbcType.INTEGER),
        @Result(column="text_type", property="textType", jdbcType=JdbcType.INTEGER),
        @Result(column="text_content", property="textContent", jdbcType=JdbcType.CHAR),
        @Result(column="message_type", property="messageType", jdbcType=JdbcType.INTEGER),
        @Result(column="date", property="date", jdbcType=JdbcType.TIMESTAMP)
    })
    List<HistoryMessage> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_message
     *
     * @mbggenerated Mon Jan 15 14:38:26 CST 2018
     */
    @Update({
        "update history_message",
        "set user_from_id = #{userFromId,jdbcType=INTEGER},",
          "to_id = #{toId,jdbcType=INTEGER},",
          "text_type = #{textType,jdbcType=INTEGER},",
          "text_content = #{textContent,jdbcType=CHAR},",
          "message_type = #{messageType,jdbcType=INTEGER},",
          "date = #{date,jdbcType=TIMESTAMP}",
        "where message_id = #{messageId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(HistoryMessage record);
}